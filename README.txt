Project 1 – Part A
Erik Rodriguez, 3207-002

Device Events: 
These will be if the device is currently free or not. This can be done with a single “variable” such as CPU_FINISHED 1 or 0. 

Event Queues:
Events are always sent to the priority queue which determines the order that events are handled. All device queues are FIFO. When a job arrives at a device queue, the queue will check if the device is free. If it is the job begins right away, if not the device will wait in the queue. 

Time advancement:
	Time is simulated by the random values generated within the bounds of the given job/event such as CPU_MIN and CPU_MAX. Time starts at 0, and its value is continually added upon until a given max value is reached such as 100000 at which point the simulation stops.

Priority Queue:
	Every event will have a time associated with it. The queue will select the event with the lowest time and remove it from the queue. The queue will set its time equal to that of the event last removed. The program then determines the time for the next job and adds it to the queue using a random integer between the given ARRIVE_MIN and max. Next the current event is handled i.e. sending a job to the CPU. In this example, the CPU is free and therefore the program calculates the time at which that the job at the CPU will finish and also adds it to the queue. This will continue until a given time is reached and the queue removes a “SIMULATION_FINISHED” event, at which point it will stop processing events even if jobs aren’t finished.

PQ Sourcing:
	All events enter the PQ at some point. Device events are sent from each respective device to the PQ, such as when an IO finishes. Jobs also generate a random chance for when they are finished, if so they will send a job finished event. New jobs generated are sent first to PQ directly.

Event Time Values:
	These values are generated randomly within the given parameters. These parameters/bounds will be read by the program from a given file. Every event (such as ARRIVE_MIN/MAX, and QUIT_PROB) has its own set of min and max values, each event will have a random number generated from within those bounds which will be “attached” to the event.



PQ Event Removal:
	Events are always removed from the PQ when it is their turn to be processed, meaning they have the lowest time value in the queue. Events do not “stay” in the PQ, if a job hasn’t finished then it will re-enter the PQ as a new event.

PQ Process Creation & Insertion:
	New processes are created via the devices (existing jobs) or generated by the system (new jobs). Existing jobs/processes will be inserted into the PQ as they “finish” at each IO device by the devices themselves. New jobs are generated by the system which will then be similarly inserted into the PQ.

Process Start Time Determination:
	Jobs are generated with an interarrival time that is randomly generated between the given bounds ARRIVE_MIN/MAX.

